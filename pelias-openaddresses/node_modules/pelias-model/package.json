{
  "name": "pelias-model",
  "author": {
    "name": "mapzen"
  },
  "version": "4.0.0",
  "description": "Pelias data models",
  "homepage": "https://github.com/pelias/model",
  "license": "MIT",
  "main": "index.js",
  "scripts": {
    "units": "node test/run.js | tap-spec",
    "test": "npm run units",
    "lint": "jshint .",
    "validate": "npm ls"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/pelias/model.git"
  },
  "keywords": [
    "pelias",
    "model"
  ],
  "bugs": {
    "url": "https://github.com/pelias/model/issues"
  },
  "engines": {
    "node": ">=0.10.26",
    "npm": ">=1.4.3"
  },
  "dependencies": {
    "lodash": "^4.6.1",
    "through2": "^2.0.0"
  },
  "devDependencies": {
    "event-stream": "^3.3.2",
    "precommit-hook": "^3.0.0",
    "tap-spec": "^4.1.1",
    "tape": "^4.4.0"
  },
  "pre-commit": [
    "lint",
    "validate",
    "test"
  ],
  "readme": "## Installation\n\n```bash\n$ npm install pelias-model\n```\n\n[![NPM](https://nodei.co/npm/pelias-model.png?downloads=true&stars=true)](https://nodei.co/npm/pelias-model)\n\n## Document\n\nThe `Document` model is a convenient way of modelling POI and admin records so that they are compatible with the Pelias import pipeline.\n\nUsing this model ensures that your import script will continue to work even when the underlying schema changes.\n\n```javascript\nvar Document = require('pelias-model').Document;\n\nvar poi = new Document( 'geoname', 'venue', 1003 )\n  .setAlpha3( 'GBR' )\n  .setMeta( 'author', 'peter' )\n  .setName( 'default', 'Hackney City Farm' )\n  .setName( 'alt', 'Haggerston City Farm' )\n  .setAdmin( 'admin0', 'Great Britain' )\n  .setAdmin( 'neighborhood', 'Shoreditch' )\n  .addParent( 'country', 'Great Britain', '1001', 'GreatB' )\n  .addParent( 'neighbourhood', 'Shoreditch', '2002' )\n  .setAddress( 'number', '10' )\n  .setAddress( 'street', 'pelias place' )\n  .addCategory( 'foo' )\n  .addCategory( 'bar' )\n  .removeCategory( 'foo' )\n  .setPopulation(10)\n  .setPopularity(3)\n  .setCentroid({ lon: 0.5, lat: 50.1 })\n  .setPolygon( geojsonObject /* any valid geojson object */ )\n  .setBoundingBox( bboxObject /* see tests for bbox syntax */ );\n\nconsole.log( poi );\n```\n\n**Note** the `_meta` property is unenumerable, so you won't see it when you `console.log` or `JSON.stringify` the object, don't worry it's still there:\n\n```javascript\nvar poi = new Document( 'geoname', 'venue', 1003 );\npoi.setMeta( 'author', 'mapzen' );\n\nconsole.log( poi, poi.getMeta( 'author' ), poi._meta );\n```\n\n## NPM Module\n\nThe `pelias-model` npm module can be found here:\n\n[https://npmjs.org/package/pelias-model](https://npmjs.org/package/pelias-model)\n\n## Contributing\n\nPlease fork and pull request against upstream master on a feature branch.\n\nPretty please; provide unit tests and script fixtures in the `test` directory.\n\n### Running Unit Tests\n\n```bash\n$ npm test\n```\n\n### Continuous Integration\n\nTravis tests every release against node version `0.10`\n\n[![Build Status](https://travis-ci.org/pelias/model.png?branch=master)](https://travis-ci.org/pelias/model)\n",
  "readmeFilename": "README.md",
  "_id": "pelias-model@4.0.0",
  "dist": {
    "shasum": "4bd9dd0e5b2f452f8cdcd357bea6182a2a225515"
  },
  "_from": "pelias-model@4.0.0",
  "_resolved": "https://registry.npmjs.org/pelias-model/-/pelias-model-4.0.0.tgz"
}
