{
  "name": "pelias-logger",
  "version": "0.0.8",
  "description": "The centralized logger package for Pelias.",
  "keywords": [
    "pelias",
    "logger"
  ],
  "author": {
    "name": "mapzen"
  },
  "main": "index.js",
  "devDependencies": {
    "precommit-hook": "1.0.7"
  },
  "dependencies": {
    "winston": "^0.9.0",
    "pelias-config": ">=0.1.4"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/pelias/logger"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/pelias/logger/issues"
  },
  "homepage": "https://github.com/pelias/logger",
  "readme": "# logger\n\n[![NPM](https://nodei.co/npm/pelias-logger.png)](https://nodei.co/npm/pelias-logger/)\n\nThe centralized logger package for Pelias, which wraps [winston](https://github.com/winstonjs/winston) with\nPelias-specific transports and default configurations.\n\n### config\nThe logger will set its log levels to the `logger.level` property in `pelias-config`, which should be set to any of the\ndefault winston [options](https://github.com/winstonjs/winston#logging-levels). `logger.timestamp` and\n`logger.colorize` take boolean values (defaulting to `true`) that indicate whether log lines should have a\ntimestamp/be colorized.\n\n### API\n##### `get( name, loggerOpts )`\nRetrieve a logger with a specific name or, if none is found, create a new one.\n\n  * `name`: the name to search for/assign to the logger\n  * `loggerOpts`: if a new logger has to be created, the options to pass to\n    [`winston.Logger()`](https://github.com/winstonjs/winston#instantiating-your-own-logger)\n\n##### `winston`\nThe winston package is exposed via this option, to provide access to any items needed in custom `loggerOpts` passed to\n`get()` (like `winston.transports.*` classes).\n\n### example\n```javascript\nvar peliasLogger = require( 'pelias-logger' );\nvar logger1 = peliasLogger.get( 'logger1' );\nvar logger2 = peliasLogger.get( 'logger2', {\n\ttransports: [\n\t\tnew peliasLogger.winston.transports.File( {\n\t\t\tfilename: 'output.txt',\n\t\t\ttimestamp: true\n\t\t})\n\t]\n});\nlogger1.warn( 'hello' );\n```\n",
  "readmeFilename": "README.md",
  "_id": "pelias-logger@0.0.8",
  "_from": "pelias-logger@^0.x.x"
}
