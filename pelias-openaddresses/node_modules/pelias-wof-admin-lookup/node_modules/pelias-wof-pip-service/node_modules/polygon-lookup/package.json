{
  "name": "polygon-lookup",
  "author": {
    "name": "mapzen"
  },
  "version": "1.0.2",
  "description": "Fast point-in-polygon intersection for large numbers of polygons.",
  "homepage": "https://github.com/pelias/polygon-lookup",
  "license": "MIT",
  "main": "index.js",
  "scripts": {
    "test": "node test/test.js | tap-spec"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/pelias/polygon-lookup.git"
  },
  "keywords": [
    "polygon",
    "lookup",
    "intersection",
    "coarse",
    "reverse-geocode"
  ],
  "bugs": {
    "url": "https://github.com/pelias/polygon-lookup/issues"
  },
  "engines": {
    "node": ">=0.10.26",
    "npm": ">=1.4.3",
    "elasticsearch": ">=1.1.1"
  },
  "dependencies": {
    "point-in-polygon": "0.0.0",
    "rbush": "1.3.4",
    "through2": "^0.6.3"
  },
  "devDependencies": {
    "tape": "^2.13.4",
    "tap-spec": "^0.2.0",
    "precommit-hook": "1.0.7",
    "jshint": "2.5.11"
  },
  "readme": "# polygon-lookup\n\n[![Build Status](https://travis-ci.org/pelias/polygon-lookup.svg?branch=master)](https://travis-ci.org/pelias/polygon-lookup)\n\n[![NPM](https://nodei.co/npm/polygon-lookup.png)](https://nodei.co/npm/polygon-lookup/)\n\nA data-structure for performing fast, accurate point-in-polygon intersections against (potentially very large) sets of\npolygons. `PolygonLookup` builds an [R-tree](http://en.wikipedia.org/wiki/R-tree), or bounding-box spatial index, for its\npolygons and uses it to quickly narrow down the set of candidate polygons for any given point. If there are any\nambiguities, it'll perform point-in-polygon intersections to identify the one that *really* intersects. `PolygonLookup`\noperates entirely in memory, and works best for polygons with little overlap.\n\n## API\n\n##### `PolygonLookup(featureCollection)`\n  * `featureCollection` (**optional**): A GeoJSON collection to optionally immediately load with `.loadFeatureCollection()`.\n\n##### `PolygonLookup.search(x, y)`\nNarrows down the candidate polygons by bounding-box, and then performs point-in-polygon intersections to identify the\nfirst container polygon (and only the first, even if multiple polygons really do intersect).\n\n  * `x`: the x-coordinate to search for\n  * `y`: the y-coordinate to search for\n  * `return`: the intersecting polygon if one was found; otherwise, `undefined`.\n\n##### `PolygonLookup.loadFeatureCollection(featureCollection)`\nStores a feature collection in this `PolygonLookup`, and builds a spatial index for it. The polygons and rtree can be\naccessed via the `.polygons` and `.rtree` properties.\n\n  * `featureCollection` (**optional**): A GeoJSON collection containing some Polygons/MultiPolygons. Note that\n    MultiPolygons will get expanded into multiple polygons.\n\n## example usage\n\n```javascript\nvar PolygonLookup = require( 'polygon-lookup' );\nvar featureCollection = {\n\ttype: 'FeatureCollection',\n\tfeatures: [{\n\t\ttype: 'Feature',\n\t\tproperties: { id: 'bar' },\n\t\tgeometry: {\n\t\t\ttype: 'Polygon',\n\t\t\tcoordinates: [ [ [ 0, 1 ], [ 2, 1 ], [ 3, 4 ], [ 1, 5 ] ] ]\n\t\t}\n\t}]\n};\nvar lookup = new PolygonLookup( featureCollection );\nvar poly = lookup.search( 1, 2 );\nconsole.log( poly.properties.id ); // bar\n```\n",
  "readmeFilename": "README.md",
  "_id": "polygon-lookup@1.0.2",
  "dist": {
    "shasum": "cc8c2c5955b9395cbcddef2c165ccd5dbba774e7"
  },
  "_from": "polygon-lookup@^1.0.2",
  "_resolved": "https://registry.npmjs.org/polygon-lookup/-/polygon-lookup-1.0.2.tgz"
}
